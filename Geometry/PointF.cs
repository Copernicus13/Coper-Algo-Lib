//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a T4 template.
//
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;

namespace CoperAlgoLib.Geometry
{
    public struct PointF : IEquatable<PointF>
    {
        public float X;
        public float Y;

        public PointF(float x, float y)
        {
            X = x;
            Y = y;
        }

        public override bool Equals(object obj) => obj is PointF other && Equals(other);

        public override int GetHashCode() => HashCode.Combine(X, Y);

        public bool Equals(PointF other) => X == other.X && Y == other.Y;

        public static bool operator ==(PointF lhs, PointF rhs) => lhs.Equals(rhs);

        public static bool operator !=(PointF lhs, PointF rhs) => !lhs.Equals(rhs);
    }
}
